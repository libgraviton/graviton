# This file is a "template" of what your parameters.yml file should look like
parameters:

    graviton.mongodb.default.server.db: db
    graviton.mongodb.default.server.uri: ~

    graviton.document.dateFormat: 'Y-m-d\TH:i:sO'
    graviton.document.dateFormatRegex: '^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}[+-]\d{2}[:]?\d{2}$'
    graviton.document.timezone: 'UTC'

    graviton.log.path: "%kernel.logs_dir%/%kernel.environment%.log"
    graviton.log.level: "info"
    graviton.sentry.dsn: null

    # proxy settings for HttpClient and possibly more
    graviton.proxy: null
    graviton.noproxy: null

    # which serializer groups should be (de)serialized on this instance
    graviton.rest.serializer.groups: null
    # if true, then the 'x-groups' header can override the serialized groups
    graviton.rest.serializer.allow_group_override_header: false
    graviton.rest.serializer.override_header_name: x-groups
    graviton.rest.schema_variation.enable: false

    # a map that can specify optional data restriction from incoming requests to the database
    # example:
    #graviton.rest.data_restriction.map:
    #    x-graviton-tenant: "int:tenant"
    graviton.rest.data_restriction.map: []
    # here, you can override what gets actually persisted, a map from provided value to the effective value
    # example:
    #graviton.rest.data_restriction.persist.map:
    #    tenant: "int:1234"
    # IMPORTANT: this setting is only relevant for the ConditionalRestrictionPersisterListener! in normal mode,
    # we always persist the current value
    graviton.rest.data_restriction.conditional.persist.map: []
    graviton.rest.data_restriction.mode: eq
    # if true, then the mapped tenant is saved to the entity. if false, it mainly means that tenant stuff applies
    # to loader stuff (and maybe dynServiceListeners), but is not always saved
    graviton.rest.data_restriction.persist: true
    # if true, the requests to solr as restricted - if false, then not.
    graviton.rest.data_restriction.solr: true

    graviton.rest.openapi.path: "%kernel.project_dir%/app/config/routing.yml"

    graviton.jmespath.cache_dir: "%kernel.cache_dir%/jmespath"

    # security related parameters
    graviton.security.authentication.allow_anonymous: true
    graviton.security.authentication.test_username: false
    graviton.security.authentication.strategy.cookie.key: graviton_user
    graviton.security.authentication.strategy.subnet.key: 0.0.0.0/0
    graviton.security.authentication.strategy.subnet.header_field: x-graviton-authentication
    graviton.security.authentication.strategy.header.key: graviton_user

    graviton.security.authentication.provider.model: graviton.core.model.dummy
    graviton.security.authentication.provider.model.query_field: false

    graviton.security.services.whitelist: {}

    # audit log related settings
    security.audit.enabled: true
    security.audit.logger_url: null
    security.audit.ignore_methods:
        - GET
        - OPTIONS
        - HEAD
    security.audit.record_payload: false
    security.audit.record_payload_exception_list:
        - '/file/*'
        - '/auth'
        - '/security/*'

    # may be either 'local' or any oher defined in oneup_flysystem.adapters.* in config.yml
    graviton.file.backend: local

    # Add full qualified type, application/pdf, image/jpeg...
    graviton.file.allowed.mime_types: []
    graviton.file.read_filesystem_mimetype: true

    graviton.file.local.storage_directory: '%kernel.project_dir%/app/files'

    graviton.file.s3.endpoint: null
    graviton.file.s3.version: latest
    graviton.file.s3.region: us-east-1
    graviton.file.s3.bucket: graviton
    graviton.file.s3.credentials.key: null
    graviton.file.s3.credentials.secret: null

    graviton.file.webdav.baseuri: null
    graviton.file.webdav.username: null
    graviton.file.webdav.password: null

    graviton.core.httpclient.debugRequests: false
    graviton.core.httpclient.debugMaxLength: 5000
    graviton.core.httpclient.verifyPeer: false

    graviton.translator.default.locale: en
    graviton.translator.cache_name_depth: 3

    # optional url to a solr instance for improved search
    graviton.solr.url: null
    # how many characters does a search term need to make it fuzzy?
    graviton.solr.fuzzy_bridge: 5
    # how many characters needed until we start searching literal (before only fuzzy/wildcard)
    graviton.solr.literal_bridge: 5
    # how many characters does a search term need to make it wildcard?
    graviton.solr.wildcard_bridge: 3
    # if the terms should ANDed together or not
    graviton.solr.andify_terms: true

    graviton.router.host: null
    graviton.router.port_http: null
    graviton.router.port_https: null

    # service info injected by cloudfoundry
    vcap.services: ~

    mailer_transport:  smtp
    mailer_host:       127.0.0.1
    mailer_user:       ~
    mailer_password:   ~

    locale:            en

    # A secret key that's used to generate certain security-related tokens
    secret:            ThisTokenIsNotSoSecretChangeIt

    # rabbitmq config

    # headers in this list will be forwarded in the rabbitmq queue message (their names and values as map)
    graviton.rabbitmq.queueevent.transient_headers: []

    graviton.rabbitmq.host: localhost
    graviton.rabbitmq.port: 5672
    graviton.rabbitmq.user: guest
    graviton.rabbitmq.password: guest
    graviton.rabbitmq.vhost: /
    graviton.rabbitmq.consumer.dump.routingkeys:
        - 'document.#'

    graviton.worker.relativeUrl: null

    # pagination defaults
    graviton.rest.pagination.limit: 10
    # enable return of total count headers on rest AllAction?
    graviton.rest.calculate_total_record_count: false
    # name of http header to force total count header?
    graviton.rest.total_count_enable_header_name: x-graviton-total-count

    # how to call composer on this machine
    graviton.composer.cmd: composer

    # how to call git on this machine
    graviton.git.cmd: git

    graviton.writelock.randomwaiturls:
      - /event/status

    # you can set this to a value if you want to override the determined cache adapter to use
    graviton.cache.provider.override: null
    # some id to differentiate "instances" upon redeployments for shared distributed caches
    graviton.cache.instance_id: grv

    #graviton.cache.redis.host: localhost
    graviton.cache.redis.host: null
    graviton.cache.redis.port: 6379

    # header name to set for varnish in front
    graviton.cache.server.header: xkey

