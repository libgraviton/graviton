imports:
    - { resource: config_dev.yml }
    - { resource: services_test.yml }

parameters:
    kernel.debug: false
    debug.container.dump: true
    # we shall not produce queue messages in tests
    graviton.rabbitmq.producer.extamqp.class: Graviton\RabbitMqBundle\Producer\Dummy

    # headers in this list will be forwarded in the rabbitmq queue message (their names and values as map)
    graviton.rabbitmq.queueevent.transient_headers:
        - graviton_user
        - x-graviton-client

    # in tests, we always use the array cache provider
    graviton.cache.provider.override: array

    graviton.rest.calculate_total_record_count: false

    # for testing group serialization
    graviton.rest.serializer.groups: {  }
    graviton.rest.serializer.allow_group_override_header: true
    graviton.rest.serializer.override_header_name: x-groups
    graviton.rest.schema_variation.enable: true

    # flysystem backend in memory
    graviton.file.backend: local

    graviton.worker.relativeUrl: "https://backendalias:9443/"
    graviton.translator.default.locale: en

    graviton.generator.synthetic_fields: 'int:clientId'
    graviton.generator.synthetic_fields_expose_on: '/testcase/rest-listeners-cond-persister'

    # for testing WhoamiController and security features
    graviton.security.authentication.provider.model: gravitondyn.securityuser.model.securityuser
    graviton.security.authentication.provider.model.query_field: username
    graviton.security.authentication.strategy: graviton.security.authentication.strategy.multi
    graviton.security.authentication.strategy.cookie.key: x-graviton-user
    graviton.security.authentication.strategy.subnet.key: 127.0.0.0/24
    graviton.security.authentication.strategy.subnet.header_field: x-graviton-auth
    graviton.security.authentication.strategy.header.key: x-graviton-user

framework:
    test: ~
    profiler:
        enabled: false
        collect: false

web_profiler:
    toolbar: false
    intercept_redirects: false

monolog:
    handler:
        name: main
        type: "test"

# DoctrineMongoDB Configuration
# see: http://symfony.com/doc/current/bundles/DoctrineMongoDBBundle/config.html
doctrine_mongodb:
    connections:
        faulty:
            server: 'mongodb://fail-server'
            options: {}
    document_managers:
        faulty:
            connection: faulty
