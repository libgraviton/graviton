{
    "name": "graviton/graviton",
    "license": "MIT",
    "type": "project",
    "description": "The base package for graviton",
    "authors": [
        {
            "name": "List of contributors",
            "homepage": "https://github.com/libgraviton/graviton/graphs/contributors"
        }
    ],
    "autoload": {
        "psr-0": {"": "src/", "Graviton": "src/"},
        "classmap": [ "app/AppKernel.php", "app/AppCache.php" ]
    },
    "require": {
        "php": ">=7.1.0",
        "ext-fileinfo": "*",
        "symfony/symfony": "~3.4.0",
        "symfony/monolog-bundle": "~3.0",
        "sensio/distribution-bundle": "~5.0",
        "sensio/generator-bundle": "~3.0",
        "incenteev/composer-parameter-handler": "^2.1.0",
        "jms/serializer-bundle": "^2.2.0",
        "doctrine/mongodb-odm-bundle": "^3.4.0",
        "graviton/php-rql-parser": ">=2.5.0",
        "graviton/rql-parser-bundle": "dev-develop",
        "graviton/json-schema": ">=1.10.0",
        "php-jsonpatch/php-jsonpatch": "~3.0",
        "doesntmattr/mongodb-migrations": "^1.1.3",
        "thefrozenfire/swagger": "=2.0.7",
        "symfony/psr-http-message-bridge": "^1.0.0",
        "php-amqplib/rabbitmq-bundle": "^1.13.0",
        "justinrainbow/json-schema": "~5.2.0",
        "guzzlehttp/guzzle": "^6.3.0",
        "riverline/multipart-parser": "^1.1.0",
        "oneup/flysystem-bundle": "^1.11",
        "alcaeus/mongo-php-adapter": "^1.0",
        "league/flysystem-aws-s3-v3": "^1.0",
        "doctrine/doctrine-cache-bundle": "^1.3",
        "graviton/php-proxy": "^1.0",
        "sentry/sentry-symfony": "^1.0"
    },
    "require-dev": {
        "phpunit/phpunit": "^7.1.3",
        "squizlabs/php_codesniffer": "~3",
        "libgraviton/codesniffer": "~2",
        "johnkary/phpunit-speedtrap": "~3",
        "graviton/test-services-bundle": "^0.36.0",
        "symfony/phpunit-bridge": "^4.0",
        "graviton/deploy-scripts": "~0.4",
        "doctrine/data-fixtures": "^1.2",
        "react/promise": "^2.5",
        "react/event-loop": "^0.4.3",
        "liip/functional-test-bundle": "2.x-dev"
    },
    "suggest": {
        "league/flysystem-rackspace": "Allows you to use Rackspace Cloud Files",
        "league/flysystem-azure": "Allows you to use Windows Azure Blob storage",
        "league/flysystem-webdav": "Allows you to use WebDAV storage",
        "league/flysystem-aws-s3-v2": "Allows you to use S3 storage with AWS SDK v2",
        "league/flysystem-aws-s3-v3": "Allows you to use S3 storage with AWS SDK v3",
        "league/flysystem-dropbox": "Allows you to use Dropbox storage",
        "league/flysystem-sftp": "Allows you to use SFTP server storage via phpseclib",
        "league/flysystem-ziparchive": "Allows you to use ZipArchive adapter"
    },
    "scripts": {
        "post-root-package-install": [
            "SymfonyStandard\\Composer::hookRootPackageInstall"
        ],
        "post-install-cmd": [
            "Incenteev\\ParameterHandler\\ScriptHandler::buildParameters",
            "Sensio\\Bundle\\DistributionBundle\\Composer\\ScriptHandler::buildBootstrap",
            "Graviton\\CoreBundle\\Composer\\ScriptHandler::generateVersionYml",
            "Graviton\\GeneratorBundle\\Composer\\ScriptHandler::generateDynamicBundles",
            "Sensio\\Bundle\\DistributionBundle\\Composer\\ScriptHandler::clearCache",
            "Sensio\\Bundle\\DistributionBundle\\Composer\\ScriptHandler::installRequirementsFile",
            "Sensio\\Bundle\\DistributionBundle\\Composer\\ScriptHandler::removeSymfonyStandardFiles",
            "Graviton\\SwaggerBundle\\Composer\\ScriptHandler::generateSwaggerJson"
        ],
        "post-update-cmd": [
            "Incenteev\\ParameterHandler\\ScriptHandler::buildParameters",
            "Sensio\\Bundle\\DistributionBundle\\Composer\\ScriptHandler::buildBootstrap",
            "Graviton\\CoreBundle\\Composer\\ScriptHandler::generateVersionYml",
            "Graviton\\GeneratorBundle\\Composer\\ScriptHandler::generateDynamicBundles",
            "Sensio\\Bundle\\DistributionBundle\\Composer\\ScriptHandler::clearCache",
            "Sensio\\Bundle\\DistributionBundle\\Composer\\ScriptHandler::installRequirementsFile",
            "Sensio\\Bundle\\DistributionBundle\\Composer\\ScriptHandler::removeSymfonyStandardFiles",
            "Graviton\\SwaggerBundle\\Composer\\ScriptHandler::generateSwaggerJson"
        ],
        "configure": [
            "Incenteev\\ParameterHandler\\ScriptHandler::buildParameters"
        ],
        "check": [
            "./vendor/bin/phpcs -p --standard=PSR1 --ignore='src/GravitonDyn/*,app/cache,app/check.php,app/SymfonyRequirements.php,web/check.php,web/config.php,app/AppCache.php,*.css,*.js' src/ app/ web/",
            "./vendor/bin/phpcs -p --standard=PSR2 --ignore='src/GravitonDyn/*,app/cache,app/check.php,app/SymfonyRequirements.php,web/check.php,web/config.php,app/AppCache.php,*.css,*.js' src/ app/ web/",
            "./vendor/bin/phpcs -p --standard=./vendor/libgraviton/codesniffer --ignore='src/GravitonDyn/*,app/cache,app/check.php,app/SymfonyRequirements.php,web/check.php,web/config.php,app/AppCache.php,*.css,*.js' src/ app/ web/"
        ],
        "docker_prepare": [
            "rm -rf app/cache/*",
            "chown -R 33 app/cache",
            "rm -rf app/logs/*",
            "chown -R 33 app/logs"
        ],
        "docker_fixtures": [
            "app/console doctrine:mongodb:fixtures:load"
        ],
        "test": [
            "rm src/Graviton/I18nBundle/Resources/translations/*.odm",
            "touch src/Graviton/I18nBundle/Resources/translations/i18n.de.odm",
            "touch src/Graviton/I18nBundle/Resources/translations/i18n.es.odm",
            "./vendor/bin/phpunit"
        ]
    },
    "config": {
        "bin-dir": "vendor/bin",
        "github-oauth": {
            "github.com": "e404bdf27d2529d3a3b94532ab79d019992315d6"
        }
    },
    "bin": ["bin/graviton"],
    "minimum-stability": "dev",
    "prefer-stable": true,
    "extra": {
        "symfony-app-dir": "./app",
        "symfony-web-dir": "./web",
        "incenteev-parameters": [
            {
                "file": "app/config/parameters.yml",
                "env-map": {
                    "graviton.log.path": "LOG_PATH",
                    "graviton.log.level": "LOG_LEVEL",
                    "graviton.mongodb.default.server.db": "MONGODB_DB",
                    "graviton.mongodb.default.server.uri": "MONGODB_URI",
                    "graviton.rest.pagination.limit": "PAGINATION_LIMIT",
                    "graviton.generator.dynamicbundle.dir": "DYNAMICBUNDLE_DIR",
                    "graviton.composer.cmd": "COMPOSER_CMD",
                    "graviton.rabbitmq.host": "RABBITMQ_HOST",
                    "graviton.rabbitmq.port": "RABBITMQ_PORT",
                    "graviton.rabbitmq.user": "RABBITMQ_USER",
                    "graviton.rabbitmq.password": "RABBITMQ_PASSWORD",
                    "graviton.rabbitmq.vhost": "RABBITMQ_VHOST",
                    "graviton.proxy.swagger.sources": "PROXY_SWAGGER_SOURCES",
                    "graviton.security.authentication.header_required": "SECURITY_AUTHENTICATION_HEADER_REQUIRED",
                    "graviton.security.authentication.test_username": "SECURITY_AUTHENTICATION_TEST_USERNAME",
                    "graviton.security.authentication.allow_anonymous": "SECURITY_AUTHENTICATION_ALLOW_ANONYMOUS",
                    "graviton.security.authentication.strategy": "SECURITY_AUTHENTICATION_STRATEGY",
                    "graviton.security.authentication.strategy.header.key": "SECURITY_AUTHENTICATION_STRATEGY_HEADER_KEY",
                    "graviton.security.authentication.strategy.cookie.key": "SECURITY_AUTHENTICATION_STRATEGY_COOKIE_KEY",
                    "graviton.security.authentication.strategy.subnet.key": "SECURITY_AUTHENTICATION_STRATEGY_SUBNET_KEY",
                    "graviton.security.authentication.strategy.subnet.header_field": "SECURITY_AUTHENTICATION_STRATEGY_SUBNET_HEADER_FIELD",
                    "graviton.security.authentication.provider.model": "SECURITY_AUTHENTICATION_PROVIDER_MODEL",
                    "graviton.security.authentication.provider.model.query_field": "SECURITY_AUTHENTICATION_MODEL_QUERY_FIELD",
                    "graviton.cache.provider.service_id": "CACHE_PROVIDER_SERVICE_ID",
                    "graviton.cache.redis.host": "CACHE_REDIS_HOST",
                    "graviton.cache.redis.port": "CACHE_REDIS_PORT",
                    "doctrine.odm.cache.type": "ODM_CACHE_TYPE",
                    "doctrine.odm.cache.class": "ODM_CACHE_CLASS",
                    "doctrine.odm.cache.host": "ODM_CACHE_HOST",
                    "doctrine.odm.cache.port": "ODM_CACHE_PORT",
                    "doctrine.odm.cache.instance_class": "ODM_CACHE_INSTANCE_CLASS",
                    "graviton.file.backend": "FILE_BACKEND",
                    "graviton.file.local.storage_directory": "FILE_LOCAL_STORAGE_DIRECTORY",
                    "graviton.file.allowed.mime_types": "FILE_ALLOWED_MIME_TYPES",
                    "graviton.file.read_filesystem_mimetype": "FILE_READ_FS_MIMETYPE",
                    "graviton.file.s3.endpoint": "FILE_S3_ENDPOINT",
                    "graviton.file.s3.version": "FILE_S3_VERSION",
                    "graviton.file.s3.region": "FILE_S3_REGION",
                    "graviton.file.s3.bucket": "FILE_S3_BUCKET",
                    "graviton.file.s3.credentials.key": "FILE_S3_KEY",
                    "graviton.file.s3.credentials.secret": "FILE_S3_SECRET",
                    "graviton.rest.serializer.groups": "SERIALIZER_GROUPS",
                    "graviton.rest.serializer.allow_group_override_header": "SERIALIZER_ALLOW_GROUP_OVERRIDE_HEADER",
                    "graviton.rest.serializer.override_header_name": "SERIALIZER_GROUP_OVERRIDE_HEADER_NAME",
                    "graviton.worker.relativeUrl": "WORKER_RELATIVE_URL",
                    "graviton.analytics.cache_time.metadata": "ANALYTICS_CACHE_TIME_METADATA",
                    "graviton.sentry.dsn": "SENTRY_DSN"
                }
            },
            {
                "parameter-key": "deploy-scripts",
                "file": "app/config/deploy.yml",
                "env-map": {
                    "cf_bin": "CF_BIN",
                    "cf_process_timeout": "CF_PROCESS_TIMEOUT",
                    "cf_api_url": "CF_API_URL",
                    "cf_username": "CF_USERNAME",
                    "cf_password": "CF_PASSWORD",
                    "cf_org": "CF_ORG",
                    "cf_space": "CF_SPACE",
                    "cf_domain": "CF_DOMAIN",
                    "cf_services": "CF_SERVICES",
                    "cf_environment_vars": "CF_ENVIRONMENT_VARS"
                }
            }
        ],
        "installer-paths": {
            "vendor/composer_phpcs": ["libgraviton/codesniffer"]
        }
    },
    "non-feature-branches": ["master", "develop", "support/*"]
}
