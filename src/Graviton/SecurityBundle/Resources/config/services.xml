<?xml version="1.0" encoding="UTF-8"?>
<container xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns="http://symfony.com/schema/dic/services"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <services>
        <service id="graviton_security_authenticator"
                 class="Graviton\SecurityBundle\Authentication\SecurityAuthenticator"
                >
            <argument>%graviton.security.authentication.header_required%</argument>
            <argument>%graviton.security.authentication.test_username%</argument>
            <argument>%graviton.security.authentication.allow_anonymous%</argument>
            <argument type="service" id="graviton_security_user_provider"/>
            <!-- This service id is an alias defined in the parameters.yml -->
            <argument type="service" id="graviton.security.authentication.strategy"/>
            <argument type="service" id="logger"/>
        </service>

        <!--
            Strategies used by AuthenticationKeyAuthenticator
            Value set in Dpc Injection
            graviton.security.authentication.strategy
        -->
        <service id="graviton.security.authentication.strategy.header"
                 class="Graviton\SecurityBundle\Authentication\Strategies\HeaderFieldStrategy">
            <argument>%graviton.security.authentication.strategy_key%</argument>
            <tag name="graviton.security.authenticationkey.finder"/>
        </service>

        <service id="graviton.security.authentication.strategy.cookie"
                 class="Graviton\SecurityBundle\Authentication\Strategies\CookieFieldStrategy">
            <argument>%graviton.security.authentication.strategy_key%</argument>
            <tag name="graviton.security.authenticationkey.finder"/>
        </service>

        <!--
            Services related to the AuthenticationUserProvider
        -->
        <service id="graviton_security_user_provider"
                 class="Graviton\SecurityBundle\Authentication\Provider\AuthenticationProvider">
            <argument type="service" id="graviton.security.authentication.dynamic.model" />
            <argument>%graviton.security.authentication.provider.model.query_field%</argument>
        </service>

        <service id="graviton.security.authentication.provider.model.factory"
                 class="Graviton\SecurityBundle\User\Model\ModelFactory">
            <argument type="service" id="service_container" />
        </service>

        <service id="graviton.security.authentication.provider"
                 class="Graviton\RestBundle\Model\ModelInterface">
            <factory service="graviton.security.authentication.factory" method="create"/>
        </service>

        <service id="graviton.security.authentication.provider.model.noop"
                 class="Graviton\SecurityBundle\User\Model\NullModel">
          <call method="setRepository">
            <argument type="service" id="graviton.core.repository.app"/>
          </call>
        </service>

        <!--
            Commands
        -->
        <service id="graviton.security.authenticationkey.finder.command"
                 class="Graviton\SecurityBundle\Command\AuthenticationKeyFinderCommand">
            <tag name="console.command"/>
        </service>

        <!--
            Authentication logger
        -->
        <service id="graviton.security.authentication.listener"
                 class="Graviton\SecurityBundle\Listener\AuthenticationLogger">
            <argument type="service" id="logger" />
            <tag name="kernel.event_subscriber" />
        </service>

        <!--
            Voter services
        -->
        <service id="graviton.security.access.own_context_voter"
            class="Graviton\SecurityBundle\Voter\OwnContextVoter"
            public="false">
            <tag name="security.voter" />
        </service>
        <service id="graviton.security.access.service_allowed_voter"
            class="Graviton\SecurityBundle\Voter\ServiceAllowedVoter"
            public="false">
            <argument>%graviton.security.services.whitelist%</argument>
            <tag name="security.voter" />
        </service>

        <!--
            Whoami Services
        -->
        <service id="graviton.security.model.whoami"
                 class="Graviton\SecurityBundle\Model\WhoAmI"
                 parent="graviton.rest.model">
            <argument type="service" id="graviton.rql.visitor.mongodb"/>
            <call method="setRepository">
                <argument type="service" id="graviton.core.repository.app"/>
            </call>
        </service>
        <service id="graviton.security.controller.whoami"
                 class="Graviton\SecurityBundle\Controller\WhoAmIController" parent="graviton.rest.controller">
            <call method="setModel">
                <argument type="service" id="graviton.security.model.whoami"/>
            </call>
        </service>

        <!--
            Service Security Utils
        -->
        <service id="graviton.security.service.utils"
                 class="Graviton\SecurityBundle\Service\SecurityUtils">
            <argument type="service" id="security.token_storage"/>
        </service>

    </services>
</container>
