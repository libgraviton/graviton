<?xml version="1.0" encoding="UTF-8"?>
<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">
    <parameters>
        <parameter key="graviton.rabbitmq.consumer.dump.class">Graviton\RabbitMqBundle\Service\DumpConsumer</parameter>
        <parameter key="graviton.rabbitmq.document.queueevent.class">Graviton\RabbitMqBundle\Document\QueueEvent</parameter>
        <parameter key="graviton.rabbitmq.listener.eventstatusresponselistener.class">Graviton\RabbitMqBundle\Listener\EventStatusLinkResponseListener</parameter>
        <parameter key="graviton.rabbitmq.document.eventworker.class">GravitonDyn\EventWorkerBundle\Document\EventWorker</parameter>
        <parameter key="graviton.rabbitmq.document.eventstatus.class">GravitonDyn\EventStatusBundle\Document\EventStatus</parameter>
        <parameter key="graviton.rabbitmq.document.eventstatusstatus.class">GravitonDyn\EventStatusBundle\Document\EventStatusStatus</parameter>
        <parameter key="graviton.rabbitmq.validator.validinformationtype.class">Graviton\RabbitMqBundle\Validator\Constraints\ValidInformationTypeValidator</parameter>
        <parameter key="graviton.rabbitmq.validator.validstatus.class">Graviton\RabbitMqBundle\Validator\Constraints\ValidStatusValidator</parameter>

        <!-- this is the route the DocumentEventPublisher will use to generate the 'statusUrl' field where the status can be fetched -->
        <parameter key="graviton.rabbitmq.document.eventstatusstatus.route">gravitondyn.eventstatus.rest.eventstatus.get</parameter>
    </parameters>
    <services>
        <service id="graviton.rabbitmq.consumer.dump" class="%graviton.rabbitmq.consumer.dump.class%" />
        <service id="graviton.rabbitmq.document.queueevent" class="%graviton.rabbitmq.document.queueevent.class%" />
        <service id="graviton.rabbitmq.jobproducer" parent="old_sound_rabbit_mq.document_event_producer">
            <call method="setContentType">
                <argument>application/json</argument>
            </call>
        </service>
        <service id="graviton.rabbitmq.listener.eventstatusresponselistener" class="%graviton.rabbitmq.listener.eventstatusresponselistener.class%">
            <argument type="service" id="graviton.rabbitmq.jobproducer" />
            <argument type="service" id="router" />
            <argument type="service" id="request_stack" />
            <argument type="service" id="doctrine_mongodb.odm.default_document_manager" />
            <argument type="service" id="graviton.rabbitmq.document.queueevent" />
            <argument>%graviton.document.eventmap%</argument>
            <argument>%graviton.rabbitmq.document.eventworker.class%</argument>
            <argument>%graviton.rabbitmq.document.eventstatus.class%</argument>
            <argument>%graviton.rabbitmq.document.eventstatusstatus.class%</argument>
            <argument>%graviton.rabbitmq.document.eventstatusstatus.route%</argument>
            <!-- the event 'graviton.rest.response.selfaware' will be dispatched by the SelfLinkResponseListener -->
            <tag name="kernel.event_listener" event="graviton.rest.response.selfaware" method="onKernelResponse"/>
        </service>

        <!-- Validators -->
        <service id="graviton.rabbitmq.validator.validinformationtype"
                 class="%graviton.rabbitmq.validator.validinformationtype.class%">
            <call method="addType">
                <argument>debug</argument>
            </call>
            <call method="addType">
                <argument>info</argument>
            </call>
            <call method="addType">
                <argument>warning</argument>
            </call>
            <call method="addType">
                <argument>error</argument>
            </call>
            <tag name="validator.constraint_validator" alias="graviton.rabbitmq.validator.validinformationtype"/>
        </service>
        <service id="graviton.rabbitmq.validator.validstatus"
                 class="%graviton.rabbitmq.validator.validstatus.class%">
            <call method="addStatus">
                <argument>opened</argument>
            </call>
            <call method="addStatus">
                <argument>working</argument>
            </call>
            <call method="addStatus">
                <argument>done</argument>
            </call>
            <call method="addStatus">
                <argument>failed</argument>
            </call>
            <tag name="validator.constraint_validator" alias="graviton.rabbitmq.validator.validstatus"/>
        </service>

    </services>
</container>
