parameters:

  graviton.rest.services: []
  graviton.rest.not_modifiable.origin.records:
    - "core"

services:

    graviton.rest.serializer:
        parent: "jms_serializer"
        public: true
        arguments:
            index_4: '@Graviton\RestBundle\Serializer\SerializationContextFactory'

    Graviton\RestBundle\Serializer\SerializationContextFactory:
        parent: 'Graviton\RestBundle\Serializer\ContextFactoryAbstract'

    Graviton\RestBundle\Serializer\ContextFactoryAbstract:
        calls:
          -
            method: setSetSerializeNull
            arguments:
              - false
          -
            method: setRequestStack
            arguments:
              - "@request_stack"
          -
            method: setGroups
            arguments:
              - "%graviton.rest.serializer.groups%"
          -
            method: setOverrideHeaderName
            arguments:
              - "%graviton.rest.serializer.override_header_name%"
          -
            method: setOverrideHeaderAllowed
            arguments:
              - "%graviton.rest.serializer.allow_group_override_header%"

    graviton.rest.router:
        alias: router

    #### abstract service for dynamic services rest listeners (than can react to rest events)
    graviton.rest.listener.abstract:
        abstract: true
        arguments:
          - "@logger"
          - "@request_stack"
          - "@doctrine_mongodb.odm.default_document_manager"

    ######### PRE SHIPPED REST LISTENER ABSTRACT SERVICES -> here we use class names as service names
    Graviton\RestBundle\RestListener\ConditionalRestrictionPersisterListener:
        parent: graviton.rest.listener.abstract
        class: Graviton\RestBundle\RestListener\ConditionalRestrictionPersisterListener
        abstract: true
        calls:
          - method: setRestrictionPersistMap
            arguments:
              - "%graviton.rest.data_restriction.conditional.persist.map.compiled%"
          - method: setPersistRestrictions
            arguments:
              - "%graviton.rest.data_restriction.persist%"
          - method: setSecurityUtils
            arguments:
              - "@graviton.security.service.utils"

    Graviton\RestBundle\RestListener\WhoamiRestrictionListener:
        parent: graviton.rest.listener.abstract
        class: Graviton\RestBundle\RestListener\WhoamiRestrictionListener
        abstract: true
        calls:
          - method: setSecurityUtils
            arguments:
              - "@graviton.security.service.utils"
    Graviton\RestBundle\RestListener\ValueInitializerListener:
      parent: graviton.rest.listener.abstract
      class: Graviton\RestBundle\RestListener\ValueInitializerListener

    Graviton\RestBundle\Listener\ValidationExceptionListener:
      tags:
        - name: kernel.event_listener
          event: kernel.exception
          method: onKernelException

    #Routing loader -->
    Graviton\RestBundle\Routing\Loader\RestRoutingLoader:
        arguments:
          - "%graviton.rest.services%"
        tags:
          -
            name: "routing.loader"

    #Service for validating JSON Patches -->
    graviton.rest.service.jsonpatchvalidator:
        class: Graviton\RestBundle\Service\JsonPatchValidator

    #Controller -->
    graviton.rest.controller:
        abstract: true
        public: true
        arguments:
          - '@Graviton\RestBundle\Service\RestUtils'
          - "@graviton.rest.router"
          - "@graviton.rest.service.jsonpatchvalidator"
          - "@graviton.security.service.utils"
        calls:
          -
            method: setLogger
            arguments:
              - "@logger"

    Graviton\RestBundle\Model\DocumentModelFactory:
      arguments:
        - '@Graviton\RestBundle\Service\QueryService'
        - '@event_dispatcher'
        - '@Graviton\RestBundle\Service\RestUtils'
        - '@graviton.security.service.utils'
        - '@doctrine_mongodb.odm.default_document_manager'

    # query service -->
    Graviton\RestBundle\Service\QueryService:
        arguments:
          - "@logger"
          - '@graviton.rql.requestparser'
          - "@graviton.rql.visitor.mongodb"
          - "%graviton.rest.pagination.limit%"
          - "@event_dispatcher"
          - '@Graviton\DocumentBundle\Service\SolrQuery'
          - "%graviton.rest.calculate_total_record_count%"
          - "%graviton.rest.total_count_enable_header_name%"

    Graviton\RestBundle\Listener\ContentLanguageResponseListener:
      arguments:
        - '@Graviton\RestBundle\Service\I18nUtils'
      tags:
        - name: "kernel.event_listener"
          event: "kernel.response"
          method: "onkernelresponse"

    #Json Request listener -->
    graviton.rest.listener.writelocklistener:
        class: Graviton\RestBundle\Listener\WriteLockListener
        arguments:
          - "@logger"
          - "@request_stack"
          - "@graviton.cache.adapter.app"
          - "%graviton.writelock.randomwaiturls%"
        tags:
          -
            name: kernel.event_listener
            event: kernel.controller
            priority: 9999
            method: onKernelController
          -
            name: kernel.event_listener
            event: kernel.response
            priority: 9999
            method: onKernelResponse
          -
            name: kernel.event_listener
            event: kernel.exception
            priority: 9999
            method: onKernelException

    #restUtils service - a service providing some helpers dealing with services -->
    Graviton\RestBundle\Service\RestUtils:
        arguments:
          - "@graviton.rest.serializer"
          - '@Graviton\RestBundle\Service\BodyChecker'
          - "@logger"
          - "@graviton.cache.adapter.app"
          - '@psr_http_factory'

    Graviton\RestBundle\Service\I18nUtils:
      arguments:
        - "%graviton.translator.default.language%"
        - "%graviton.translator.languages%"

    Graviton\RestBundle\Subscriber\RestSubscriber:
      tags:
        - name: kernel.event_subscriber

    #Graviton rest event listeners -->
    #Paging listener >
    Graviton\RestBundle\Listener\LinkHeaderResponseListener:
        arguments:
          - "@router"
        tags:
          -
            name: kernel.event_listener
            event: kernel.response
            method: onKernelResponse

    #X-Version response listener -->
    Graviton\RestBundle\Listener\XVersionResponseListener:
        arguments:
          - "%graviton.core.version.header%"
        tags:
          -
            name: kernel.event_listener
            event: kernel.response
            method: onKernelResponse


    Graviton\RestBundle\Listener\CacheHeaderListener:
      arguments:
        - "%graviton.cache.server.header%"
      tags:
        -
          name: kernel.event_listener
          event: kernel.response
          method: onKernelResponse

    # listener that restricts the data given to the user by manipulating the querybuilder before executing
    Graviton\RestBundle\Listener\RestrictionListener:
      arguments:
        - "@logger"
        - "@graviton.security.service.utils"
        - "%graviton.rest.data_restriction.persist%"
        - "%graviton.rest.data_restriction.solr%"
      tags:
        - name: kernel.event_listener
          event: document.model.event.query
          method: onModelQuery
        - name: kernel.event_listener
          event: document.model.event.entity.pre_persist
          method: onEntityPrePersistOrDelete
        - name: kernel.event_listener
          event: document.model.event.entity.pre_delete
          method: onEntityPrePersistOrDelete
        - name: kernel.event_listener
          event: analytics.event.pre_aggregate
          method: onPreAggregate
        - name: kernel.event_listener
          event: rql.visit.node
          method: onRqlSearch
          priority: -100

    # all body checkers
    Graviton\RestBundle\Service\BodyChecks\IdInBodyCheck: ~
    Graviton\RestBundle\Service\BodyChecks\RecordOriginBodyCheck:
      arguments:
        - recordOrigin
        - "%graviton.rest.not_modifiable.origin.records%"
    Graviton\RestBundle\Service\BodyChecks\IncrementalDateBodyCheck: ~
    Graviton\RestBundle\Service\BodyChecks\ReadOnlyFieldsBodyCheck: ~
    Graviton\RestBundle\Service\BodyChecks\VersionedServiceBodyCheck: ~

    Graviton\RestBundle\Service\BodyChecker:
      calls:
        - method: addBodyCheck
          arguments: [ '@Graviton\RestBundle\Service\BodyChecks\IdInBodyCheck' ]
        - method: addBodyCheck
          arguments: [ '@Graviton\RestBundle\Service\BodyChecks\RecordOriginBodyCheck' ]
        - method: addBodyCheck
          arguments: [ '@Graviton\RestBundle\Service\BodyChecks\ReadOnlyFieldsBodyCheck' ]
        - method: addBodyCheck
          arguments: [ '@Graviton\RestBundle\Service\BodyChecks\IncrementalDateBodyCheck' ]
        - method: addBodyCheck
          arguments: [ '@Graviton\RestBundle\Service\BodyChecks\VersionedServiceBodyCheck' ]

    # fixtures
    Graviton\RestBundle\DataFixtures\MongoDB\LoadRestrictionListenerTestData:
      public: true
      calls:
        - [ setRestUtils, [ '@Graviton\RestBundle\Service\RestUtils' ] ]
      tags:
        - { name: 'doctrine.fixture.orm' }

    psr17_factory:
      alias: Http\Discovery\Psr17Factory

    Http\Discovery\Psr17Factory: ~

    Symfony\Bridge\PsrHttpMessage\Factory\PsrHttpFactory:
      arguments:
        - '@Http\Discovery\Psr17Factory'
        - '@Http\Discovery\Psr17Factory'
        - '@Http\Discovery\Psr17Factory'
        - '@Http\Discovery\Psr17Factory'

    psr_http_factory:
      alias: Symfony\Bridge\PsrHttpMessage\Factory\PsrHttpFactory
