<?xml version="1.0" encoding="UTF-8"?>
<serializer>
  <class name="{{ base }}Document\{{ document }}" exclusion-policy="NONE">

{% if isEmbedded == true %}
    <!-- hidden id for embedding purposes -->
    <property name="realId" serialized-name="realId" type="string" accessor-getter="getRealId" exclude="true"/>
{% else %}
    <property name="id" type="string" accessor-getter="getId" />

{# add id to reserved fieldnames when NOT embedded #}
{% set reservedFieldnames = reservedFieldnames|join('id') %}

{% endif %}

    <property name="deletedDate" serialized-name="deletedDate" exclude="true" accessor-getter="getDeleteddate">
        <type><![CDATA[DateTime]]></type>
    </property>
{% if isrecordOriginFlagSet %}
    <property name="recordOrigin" serialized-name="recordOrigin" accessor-getter="getRecordOrigin" accessor-setter="setRecordOrigin">
        <type><![CDATA[string]]></type>
    </property>
{% endif %}

   <property name="fieldsAddedCount" type="int" accessor-getter="getFieldsAddedCount" exclude="true"/>
{% for field in fields|filter(v => not (v.fieldName in reservedFieldnames) ) %}
    {% if field.type == 'boolean' %}
      {% set getterMethod = "is#{field.fieldName|capitalize}" %}
    {% else %}
      {% set getterMethod = "get#{field.fieldName|capitalize}" %}
    {% endif %}

    <property
        name="{{ field.fieldName }}"
        max-depth="5"
        {# skip-when-empty="true" #}
        {% if field.hidden == true %}exclude="true"{% else %}exclude="false"{% endif %}
        serialized-name="{{ field.exposedName }}"
        accessor-getter="{{ getterMethod }}"
        accessor-setter="set{{ field.fieldName|capitalize }}">
      <type><![CDATA[{{ field.serializerType }}]]></type>
    </property>
{% endfor %}

     <!-- the createdAt/by fields -->
{%- set exposeCreatedBy = (not hasDefinedField(json, '_createdBy')) | json_encode -%}
{%- set exposeCreatedAt = (not hasDefinedField(json, '_createdAt')) | json_encode -%}

      <property name="_createdBy" type="string" accessor-setter="set_CreatedBy" accessor-getter="get_CreatedBy" serialized-name="_createdBy" exclude="{{ exposeCreatedBy }}"/>
      <property name="_createdAt" accessor-setter="set_CreatedAt" accessor-getter="get_CreatedAt" serialized-name="_createdAt" exclude="{{ exposeCreatedAt }}">
        <type><![CDATA[DateTime]]></type>
      </property>
    <!-- the createdAt/by fields end -->

    <!-- the lastModifiedAt/by fields -->
{%- set exposeLastModifiedBy = (not hasDefinedField(json, 'lastModifiedBy')) | json_encode -%}
{%- set exposeLastModifiedAt = (not hasDefinedField(json, 'lastModifiedAt')) | json_encode -%}

      <property name="_lastModifiedBy" type="string" accessor-setter="setLastModifiedBy" accessor-getter="getLastModifiedBy" serialized-name="lastModifiedBy" exclude="{{ exposeLastModifiedBy }}"/>
      <property name="_lastModifiedAt" accessor-setter="setLastModifiedAt" accessor-getter="getLastModifiedAt" serialized-name="lastModifiedAt" exclude="{{ exposeLastModifiedAt }}">
        <type><![CDATA[DateTime]]></type>
      </property>
    <!-- the lastModifiedAt/by fields end -->

{%-  set excludeSynthetic = (not (exposeSyntheticFields(json))) | json_encode -%}

    <!-- synthetic fields start -->
{%- for field in syntheticFields %}
    <property name="{{ field.name }}" type="{{ field.type }}" accessor-setter="set{{ field.name|capitalize }}" accessor-getter="get{{ field.name|capitalize }}" exclude="{{ excludeSynthetic }}"/>
{%- endfor %}
    <!-- synthetic fields end -->

  </class>
</serializer>
