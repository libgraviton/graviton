<?php

namespace {{ base }}DataFixtures\MongoDB;

use Symfony\Component\DependencyInjection\ContainerAwareInterface;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Doctrine\Common\DataFixtures\FixtureInterface;
use Doctrine\Common\Persistence\ObjectManager;

use {{ base }}Document\{{ document }};

/**
 * Load a example consultant and loads of fake data
 *
 * @category PersonBundle
 * @package  Graviton
 * @license  http://opensource.org/licenses/gpl-license.php GNU Public License
 * @link     http://swisscom.com
 */
class Load{{ document }}Data implements FixtureInterface, ContainerAwareInterface
{
    /**
     * @private ContainerInterface
     */
    private $container;

    /**
     * {@inheritDoc}
     *
     * @param ContainerInterface $container service_container
     *
     * @return void
     */
    public function setContainer(ContainerInterface $container = null)
    {
        $this->container = $container;
    }

    /**
     * {@inheritDoc}
     *
     * @param ObjectManager $manager Object Manager
     *
     * @return void
     */
    public function load(ObjectManager $manager)
    {
        $serializer = $this->container->get('serializer');
        $fixtures = json_decode('{{ fixtures_json }}');

        if (count($fixtures) > 0) {
            foreach ($fixtures as $record) {
                $manager->persist(
                    $serializer->deserialize(
                        json_encode($record),
                        '{{ base }}Document\{{ document }}',
                        'json'
                    )
                );
            }
        }

        $manager->flush();
    }

}
