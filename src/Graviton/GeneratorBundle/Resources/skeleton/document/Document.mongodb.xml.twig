<?xml version="1.0" encoding="UTF-8"?>
<doctrine-mongo-mapping xmlns="http://doctrine-project.org/schemas/odm/doctrine-mongo-mapping"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:gedmo="http://gediminasm.org/schemas/orm/doctrine-extensions-mapping"
      xsi:schemaLocation="http://doctrine-project.org/schemas/odm/doctrine-mongo-mapping http://doctrine-project.org/schemas/odm/doctrine-mongo-mapping.xsd">

    <mapped-superclass name="{{ base }}Document\{{ document }}Base">
    </mapped-superclass>

    {% if docType is defined and docType == "embedded-document" %}
        {% set hideIdField = true %}
    {% else %}
        {% set hideIdField = false %}
    {% endif %}

    {% if docType is not defined %}
        {% set docType = "document" %}
    {% endif %}

  <{{ docType }} name="{{ base }}Document\{{ document }}" repository-class="{{ base }}Repository\{{ document}}Repository" collection="{{ collection }}" inheritance-type="COLLECTION_PER_CLASS">

  {% if idField is defined %}
      {% if hideIdField == false %}
          <field fieldName="id" id="true" strategy="UUID" />
      {% else %}
          <field fieldName="id" type="{{ idField.doctrineType }}" id="false"/>
          <field fieldName="realId" type="{{ idField.doctrineType }}" id="true" strategy="AUTO" />
      {% endif %}
  {% else %}
      <field fieldName="id" type="string" id="true" strategy="UUID"/>
  {% endif %}

        {% for field in fields %}
            {% if 'Graviton' in field.type %}
                {% if field.relType is defined %}
                    {% set relType = {"embed": "embed", "ref": "reference"}[field.relType] %}
                {% else %}
                    {% set relType = "reference" %}
                {% endif %}

                {% if '[]' in field.type %}
                    <{{ relType }}-many field="{{ field.fieldName }}" target-document="{{ field.type[0:-2] }}{% if relType == 'embed' %}Embedded{% endif %}" strategy="set">
                        {% if relType == "reference" %}
                        <cascade>
                            <all/>
                        </cascade>
                        {% endif %}
                    </{{ relType }}-many>
                {% else %}
                    <{{ relType }}-one field="{{ field.fieldName }}" target-document="{{ field.type }}{% if relType == 'embed' %}Embedded{% endif %}">
                        {% if relType == "reference" %}
                        <cascade>
                            <all/>
                        </cascade>
                        {% endif %}
                    </{{ relType }}-one>
                {% endif %}
            {% else %}
                {% if field.type == 'hash' %}
                    <field fieldName="{{ field.fieldName }}" type="hash"/>
                {% elseif field.type == 'hash[]' %}
                    <field fieldName="{{ field.fieldName }}" type="hasharray"/>
                {% elseif field.type == 'date[]' %}
                    <field fieldName="{{ field.fieldName }}" type="datearray"/>
                {% elseif '[]' in field.type or field.type == 'array' %}
                    <field fieldName="{{ field.fieldName }}" type="collection"/>
                {% else %}
                    <field fieldName="{{ field.fieldName }}" type="{{ field.type }}"/>
                {% endif %}
            {% endif %}
        {% endfor %}

        {% if isrecordOriginFlagSet %}
            <field fieldName="recordOrigin" type="string"/>
        {% endif %}

    <indexes>
    {% if indexes is defined and indexes is not empty %}
            {% for index in indexes %}
            <index background="true">
                <key name="{{ index }}"/>
            </index>
            {% endfor %}
    {% endif %}

    {# TODO This is a fix for a missing feature in XMLDriver that can not build wieght indexes, redo this when so. #}
    {# TODO The command that build the indexes is : GenerateBuildIndexes: graviton:generate:build-indexes. #}
    {% if textIndexes is defined and textIndexes is not empty %}
            <index>
                <key name="search{{ document }}Index"/>
                {% for index, value in textIndexes %}
                    <option name="search_{{ index }}" value="{{ value }}"/>
                {% endfor %}
            </index>
    {% endif %}
    </indexes>

    </{{ docType }}>
</doctrine-mongo-mapping>
