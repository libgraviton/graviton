<?xml version="1.0" encoding="UTF-8"?>
<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">
    <parameters>
        <parameter key="graviton.core.controller.main.class">Graviton\CoreBundle\Controller\MainController</parameter>
        <parameter key="graviton.core.controller.app.class">Graviton\CoreBundle\Controller\AppController</parameter>
        <parameter key="graviton.core.repository.app.class">Graviton\CoreBundle\Repository\AppRepository</parameter>
        <parameter key="graviton.core.model.app.class">Graviton\CoreBundle\Model\App</parameter>
        <parameter key="graviton.core.model.version.class">Graviton\CoreBundle\Model\Version</parameter>
        <parameter key="graviton.core.document.app.class">Graviton\CoreBundle\Document\App</parameter>
        <parameter key="graviton.core.controller.product.class">Graviton\CoreBundle\Controller\ProductController</parameter>
        <parameter key="graviton.core.repository.product.class">Graviton\CoreBundle\Repository\ProductRepository</parameter>
        <parameter key="graviton.core.model.product.class">Graviton\CoreBundle\Model\Product</parameter>
        <parameter key="graviton.core.document.product.class">Graviton\CoreBundle\Document\Product</parameter>
        <parameter key="graviton.core.service.coreutils.class">Graviton\CoreBundle\Service\CoreUtils</parameter>
        <parameter key="graviton.core.service.coreversionutils.class">Graviton\CoreBundle\Service\CoreVersionUtils</parameter>
        <parameter key="graviton.core.links" type="collection">
            <parameter>graviton.core.static.version.get</parameter>
        </parameter>
        <parameter key="graviton.core.main.path.whitelist" type="collection">
            <parameter>/core/version</parameter>
        </parameter>
    </parameters>
    <services>
        <service id="graviton.core.controller.main"
                 class="%graviton.core.controller.main.class%">
             <argument type="service" id="router"/>
             <argument type="service" id="graviton.rest.response" strict="false"/>
             <argument type="service" id="graviton.rest.restutils"/>
             <argument type="service" id="templating"/>
             <argument>%graviton.core.links%</argument>
             <argument>%graviton.core.main.path.whitelist%</argument>
        </service>
        <service id="graviton.core.controller.app"
                 class="%graviton.core.controller.app.class%"
                 parent="graviton.rest.controller" scope="request">
            <call method="setModel">
                <argument type="service" id="graviton.core.model.app"/>
            </call>
            <tag name="graviton.rest"/>
        </service>
        <service id="graviton.core.repository.app"
                 class="%graviton.core.repository.app.class%"
                 factory-service="doctrine_mongodb.odm.default_document_manager"
                 factory-method="getRepository">
            <argument type="string">GravitonCoreBundle:App</argument>
        </service>
        <service id="graviton.core.model.app"
                 class="%graviton.core.model.app.class%"
                 parent="graviton.rest.model">
            <argument type="service" id="graviton.rql.visitor.mongodb"/>
            <call method="setRepository">
                <argument type="service" id="graviton.core.repository.app"/>
            </call>
        </service>
        <service id="graviton.core.document.app" class="%graviton.core.document.app.class%"/>
        <service id="graviton.core.controller.product"
                 class="%graviton.core.controller.product.class%"
                 parent="graviton.rest.controller" scope="request">
            <call method="setModel">
                <argument type="service" id="graviton.core.model.product"/>
            </call>
            <tag name="graviton.rest" read-only="true"/>
        </service>
        <service id="graviton.core.repository.product"
                 class="%graviton.core.repository.product.class%"
                 factory-service="doctrine_mongodb.odm.default_document_manager"
                 factory-method="getRepository">
            <argument type="string">GravitonCoreBundle:Product</argument>
        </service>
        <service id="graviton.core.model.product"
                 class="%graviton.core.model.product.class%"
                 parent="graviton.rest.model">
            <argument type="service" id="graviton.rql.visitor.mongodb"/>
            <call method="setRepository">
                <argument type="service" id="graviton.core.repository.product"/>
            </call>
        </service>
        <service id="graviton.core.document.product" class="%graviton.core.document.product.class%"/>
        <service id="graviton.core.utils" class="%graviton.core.service.coreutils.class%">
            <argument type="string">%graviton.core.version.data%</argument>
        </service>
        <service id="graviton.core.model.version" class="%graviton.core.model.version.class%" parent="graviton.rest.model"/>
        <service id="graviton.core.controller.version"
                 class="Graviton\CoreBundle\Controller\VersionController" parent="graviton.rest.controller">
            <argument type="service" id="graviton.core.utils"/>
            <call method="setModel">
                <argument type="service" id="graviton.core.model.version"/>
            </call>
        </service>
        <service id="graviton.yaml.dumper"
                 class="Symfony\Component\Yaml\Dumper">
        </service>
        <service id="graviton.core.service.coreversionutils"
                 class="%graviton.core.service.coreversionutils.class%">
            <argument>%graviton.composer.cmd%</argument>
            <argument>%kernel.root_dir%</argument>
            <argument type="service" id="graviton.yaml.dumper"/>
        </service>
    </services>
</container>
